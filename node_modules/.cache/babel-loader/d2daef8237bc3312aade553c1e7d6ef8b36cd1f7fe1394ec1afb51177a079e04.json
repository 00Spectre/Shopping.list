{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leabe\\\\OneDrive\\\\Dokumenty\\\\VS code\\\\shopping-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ShoppingLists from './components/ShoppingLists';\nimport ShoppingListDetail from './components/ShoppingListDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [lists, setLists] = useState([{\n    id: 1,\n    name: 'Shopping List 1',\n    owner: 'Member 1',\n    items: [{\n      id: 1,\n      name: 'Item 1',\n      resolved: false\n    }, {\n      id: 2,\n      name: 'Item 2',\n      resolved: false\n    }]\n  }\n  // Add more shopping lists as needed\n  ]);\n\n  const [selectedList, setSelectedList] = useState(null);\n  const handleViewList = listId => {\n    const selected = lists.find(list => list.id === listId);\n    setSelectedList(selected);\n  };\n  const handleDeleteList = listId => {\n    setLists(prevLists => prevLists.filter(list => list.id !== listId));\n    setSelectedList(null);\n  };\n  const handleCreateList = listName => {\n    const newList = {\n      id: lists.length + 1,\n      name: listName,\n      owner: 'Current User',\n      // You need to replace this with the actual owner\n      items: []\n    };\n    setLists(prevLists => [...prevLists, newList]);\n  };\n  const handleEditListName = newListName => {\n    setSelectedList(prevList => ({\n      ...prevList,\n      name: newListName\n    }));\n  };\n  const handleAddRemoveMember = () => {\n    // Implement logic for adding/removing members\n    console.log('Add/Remove Member clicked');\n  };\n  const handleLeaveList = () => {\n    setSelectedList(null);\n    // Implement logic for leaving the list\n    console.log('Leave Shopping List clicked');\n  };\n  const handleAddItem = () => {\n    // Implement logic for adding an item\n    console.log('Add Item clicked');\n  };\n  const handleRemoveItem = itemId => {\n    setSelectedList(prevList => ({\n      ...prevList,\n      items: prevList.items.filter(item => item.id !== itemId)\n    }));\n  };\n  const handleSetItemResolved = itemId => {\n    setSelectedList(prevList => ({\n      ...prevList,\n      items: prevList.items.map(item => item.id === itemId ? {\n        ...item,\n        resolved: true\n      } : item)\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(ShoppingLists, {\n          lists: lists,\n          onDeleteList: handleDeleteList,\n          onViewList: handleViewList,\n          onCreateList: handleCreateList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/list/:id\",\n        children: ({\n          match\n        }) => {\n          const listId = parseInt(match.params.id, 10);\n          const selectedList = lists.find(list => list.id === listId);\n          return selectedList ? /*#__PURE__*/_jsxDEV(ShoppingListDetail, {\n            list: selectedList,\n            onEditListName: handleEditListName,\n            onAddRemoveMember: handleAddRemoveMember,\n            onLeaveList: handleLeaveList,\n            onAddItem: handleAddItem,\n            onRemoveItem: handleRemoveItem,\n            onSetItemResolved: handleSetItemResolved\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"List not found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"y6yFD/o7GvX8erQvj5AluMZLBSI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","ShoppingLists","ShoppingListDetail","jsxDEV","_jsxDEV","App","_s","lists","setLists","id","name","owner","items","resolved","selectedList","setSelectedList","handleViewList","listId","selected","find","list","handleDeleteList","prevLists","filter","handleCreateList","listName","newList","length","handleEditListName","newListName","prevList","handleAddRemoveMember","console","log","handleLeaveList","handleAddItem","handleRemoveItem","itemId","item","handleSetItemResolved","map","children","exact","path","onDeleteList","onViewList","onCreateList","fileName","_jsxFileName","lineNumber","columnNumber","match","parseInt","params","onEditListName","onAddRemoveMember","onLeaveList","onAddItem","onRemoveItem","onSetItemResolved","_c","$RefreshReg$"],"sources":["C:/Users/leabe/OneDrive/Dokumenty/VS code/shopping-list/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ShoppingLists from './components/ShoppingLists';\nimport ShoppingListDetail from './components/ShoppingListDetail';\n\nconst App = () => {\n  const [lists, setLists] = useState([\n    {\n      id: 1,\n      name: 'Shopping List 1',\n      owner: 'Member 1',\n      items: [\n        { id: 1, name: 'Item 1', resolved: false },\n        { id: 2, name: 'Item 2', resolved: false },\n      ],\n    },\n    // Add more shopping lists as needed\n  ]);\n\n  const [selectedList, setSelectedList] = useState(null);\n\n  const handleViewList = (listId) => {\n    const selected = lists.find((list) => list.id === listId);\n    setSelectedList(selected);\n  };\n\n  const handleDeleteList = (listId) => {\n    setLists((prevLists) => prevLists.filter((list) => list.id !== listId));\n    setSelectedList(null);\n  };\n\n  const handleCreateList = (listName) => {\n    const newList = {\n      id: lists.length + 1,\n      name: listName,\n      owner: 'Current User', // You need to replace this with the actual owner\n      items: [],\n    };\n\n    setLists((prevLists) => [...prevLists, newList]);\n  };\n\n  const handleEditListName = (newListName) => {\n    setSelectedList((prevList) => ({ ...prevList, name: newListName }));\n  };\n\n  const handleAddRemoveMember = () => {\n    // Implement logic for adding/removing members\n    console.log('Add/Remove Member clicked');\n  };\n\n  const handleLeaveList = () => {\n    setSelectedList(null);\n    // Implement logic for leaving the list\n    console.log('Leave Shopping List clicked');\n  };\n\n  const handleAddItem = () => {\n    // Implement logic for adding an item\n    console.log('Add Item clicked');\n  };\n\n  const handleRemoveItem = (itemId) => {\n    setSelectedList((prevList) => ({\n      ...prevList,\n      items: prevList.items.filter((item) => item.id !== itemId),\n    }));\n  };\n\n  const handleSetItemResolved = (itemId) => {\n    setSelectedList((prevList) => ({\n      ...prevList,\n      items: prevList.items.map((item) =>\n        item.id === itemId ? { ...item, resolved: true } : item\n      ),\n    }));\n  };\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <ShoppingLists\n            lists={lists}\n            onDeleteList={handleDeleteList}\n            onViewList={handleViewList}\n            onCreateList={handleCreateList}\n          />\n        </Route>\n        <Route path=\"/list/:id\">\n          {({ match }) => {\n            const listId = parseInt(match.params.id, 10);\n            const selectedList = lists.find((list) => list.id === listId);\n            return selectedList ? (\n              <ShoppingListDetail\n                list={selectedList}\n                onEditListName={handleEditListName}\n                onAddRemoveMember={handleAddRemoveMember}\n                onLeaveList={handleLeaveList}\n                onAddItem={handleAddItem}\n                onRemoveItem={handleRemoveItem}\n                onSetItemResolved={handleSetItemResolved}\n              />\n            ) : (\n              <p>List not found</p>\n            );\n          }}\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}